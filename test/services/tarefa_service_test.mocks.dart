// Mocks generated by Mockito 5.4.6 from annotations
// in projeto_flutter/test/services/tarefa_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:projeto_flutter/models/tarefa.dart' as _i4;
import 'package:projeto_flutter/repositories/adaptive_repository.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AdaptiveRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdaptiveRepository extends _i1.Mock
    implements _i2.AdaptiveRepository {
  MockAdaptiveRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Tarefa>> carregarTarefas() =>
      (super.noSuchMethod(
            Invocation.method(#carregarTarefas, []),
            returnValue: _i3.Future<List<_i4.Tarefa>>.value(<_i4.Tarefa>[]),
          )
          as _i3.Future<List<_i4.Tarefa>>);

  @override
  _i3.Future<bool> salvarTarefas(List<_i4.Tarefa>? tarefas) =>
      (super.noSuchMethod(
            Invocation.method(#salvarTarefas, [tarefas]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> adicionarTarefa(_i4.Tarefa? tarefa) =>
      (super.noSuchMethod(
            Invocation.method(#adicionarTarefa, [tarefa]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> atualizarTarefa(_i4.Tarefa? tarefa) =>
      (super.noSuchMethod(
            Invocation.method(#atualizarTarefa, [tarefa]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> removerTarefa(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#removerTarefa, [id]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> marcarComoConcluida(String? id, bool? concluida) =>
      (super.noSuchMethod(
            Invocation.method(#marcarComoConcluida, [id, concluida]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);
}
